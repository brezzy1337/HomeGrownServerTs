// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id            Int           @default(autoincrement()) @id
  email         String        @unique
  username      String        @unique
  password      String
  paymentMethods PaymentMethods?
  stores        Store[]
  sales         Sales[]       @relation("Seller")
  orders        Orders[]      @relation("Buyer")
}

model Location {
  id        Int     @default(autoincrement()) @id
  address   String
  city      String
  state     String
  zip       Int
  longitude Float
  latitude  Float
  store     Store   @relation(fields: [storeId], references: [id])
  storeId   Int     @unique
}

model PaymentMethods {
  id          Int         @default(autoincrement()) @id
  card        Boolean     @default(false)
  paypal      CustomerID?
  cash        Boolean     @default(true)
  crypto      Boolean     @default(false)
  user        User        @relation(fields: [userId], references: [id])
  userId      Int         @unique
}

model CustomerID {
  id                Int           @default(autoincrement()) @id
  customerId        String        @unique
  paymentMethod     PaymentMethods @relation(fields: [paymentMethodKey], references: [id])
  paymentMethodKey  Int           @unique
  paymentMethodId PaymentMethodID?
}

model PaymentMethodID {
  id           Int          @default(autoincrement()) @id
  paymentMethodId String    @unique
  customerId   CustomerID   @relation(fields: [customerKey], references: [id])
  customerKey  Int          @unique
}

model Store {
  id           Int             @default(autoincrement()) @id
  user         User            @relation(fields: [userId], references: [id])
  userId       Int
  name         String
  logo         String
  about        String
  location     Location?
  vegetables   PostedVegetables[]
  fruits       PostedFruit[]
  herbs        PostedHerbs[]
  sales        Sales[]
  orders       Orders[]
}

model PostedVegetables {
  id       Int    @default(autoincrement()) @id
  store    Store  @relation(fields: [storeId], references: [id])
  storeId  Int
  name     String
  price    Int
  amount   Int
}

model PostedFruit {
  id       Int    @default(autoincrement()) @id
  store    Store  @relation(fields: [storeId], references: [id])
  storeId  Int
  name     String
  price    Float
  amount   Float
}

model PostedHerbs {
  id       Int    @default(autoincrement()) @id
  store    Store  @relation(fields: [storeId], references: [id])
  storeId  Int
  name     String
  price    Int
  amount   Int
  dried    Boolean
}

model Sales {
  id        Int      @default(autoincrement()) @id
  date      String
  status    String
  seller    User     @relation("Seller", fields: [sellerId], references: [id])
  store     Store    @relation(fields: [storeId], references: [id])
  storeId   Int
  sellerId  Int
  total     Int
  items     Json
}

model Orders {
  id         Int      @default(autoincrement()) @id
  date       String
  status     String
  buyer      User     @relation("Buyer", fields: [buyerId], references: [id])
  store      Store    @relation(fields: [storeId], references: [id])
  storeId    Int
  buyerId    Int
  total      Int
  items      Json
}