version: '3.8'
services:
  server:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: homegrown-server
    env_file:
    - .env
    ports:
    - '3000:3000'
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "ping", "192.168.0.21"]
      interval: 1s
      timeout: 5s
      retries: 10
    command: "npm run prisma migrate dev && npm run start:dev"
    networks:
      homegrown-network:
        ipv4_address: 192.168.0.20

  postgres:
    image: 'postgres:16.1-alpine3.19'
    restart: always
    ports:
    - '5432:5432'
    # user: ${POSTGRES_USER}
    environment:
      # POSTGRES_USER: ${POSTGRES_USER}
      # POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      # POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: '121314'
      POSTGRES_DB: 'homegrownprismadb'
    volumes:
    - postgres:/var/lib/postgresql/data
    #bash -c "
    # while ! pg_isready -U postgres; do sleep 1; done;
    healthcheck:
      # test: ['CMD', 'pg_isready', '-d', '${POSTGRES_DB}', -U', '${POSTGRES_USER}', '-p', '5432']
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 5s
      retries: 10
    # command: >
    #   /bin/sh -c "
    #   until pg_isready -U $$POSTGRES_USER; do sleep 1; done &&
    #   psql -U $$POSTGRES_USER -c 'ALTER USER postgres CREATEDB;' &&
    #   sudo chown $$POSTGRES_USER -R /var/run/postgresql
    #   "
    networks:
      homegrown-network:
        ipv4_address: 192.168.0.21

  pgadmin:
    image: 'dpage/pgadmin4:latest'
    ports:
    - '5845:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      homegrown-network:
        ipv4_address: 192.168.0.22

volumes:
  postgres:
    driver: local

networks:
  homegrown-network:
    ipam:
      driver: default
      config:
      - subnet: '192.168.0.0/24'
        #Here are the steps to connect to your PostgreSQL database from pgAdmin:

# Start your services with docker-compose up.
# Open a web browser and navigate to http://localhost:5845 (or whatever host and port you've mapped to pgAdmin in your docker-compose file).
# Log in to pgAdmin with the email and password you've specified in the PGADMIN_DEFAULT_EMAIL and PGADMIN_DEFAULT_PASSWORD environment variables.
# Right-click on "Servers" in the left-hand tree, and select "Create > Server...".
# In the "Create - Server" dialog, enter any name for the server.
# Switch to the "Connection" tab.
# In the "Username" and "Password" fields, enter the credentials you've specified in the POSTGRES_USER and POSTGRES_PASSWORD environment variables.
# Click "Save".
